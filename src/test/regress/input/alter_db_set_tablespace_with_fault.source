CREATE SCHEMA adst_w_fault;

SET search_path TO adst_w_fault,public;

-- Scenario 2: Where alter database set tablespace fails on segment. In this
-- case we expect that the tablespace for database remains unchanged across all
-- the segments and all of the database files remain where they were before the alter.

-- Set tablespace location variables
\set adst_source_tablespace_location '@testtablespace@/adst_w_fault_source'
\set adst_destination_tablespace_location '@testtablespace@/adst_w_fault_dest'

-- Given we create the source and destination tablespaces

\! mkdir @testtablespace@/adst_w_fault_source
CREATE TABLESPACE adst_source_tablespace LOCATION :'adst_source_tablespace_location';
\! mkdir @testtablespace@/adst_w_fault_dest
CREATE TABLESPACE adst_destination_tablespace LOCATION :'adst_destination_tablespace_location';

-- And we create a database in the source tablespace
CREATE DATABASE alter_db TABLESPACE adst_source_tablespace;

-- And we record the filesystem state for the database in the source tablespace
CREATE TEMPORARY TABLE before_alter AS SELECT * FROM stat_db_objects('alter_db', 'adst_source_tablespace');

-- And error on a segment while altering the database to use the new tablespace
SELECT gp_inject_fault('inside_move_db_transaction', 'error', dbid) FROM gp_segment_configuration WHERE role = 'p' AND content = 0;
ALTER DATABASE alter_db SET TABLESPACE adst_destination_tablespace;

-- Increase the likelihood that mirrors have applied the filesystem changes
SELECT give_mirrors_time_to_catch_up();

-- Then all the files of the database should remain in the dboid directory in the source tablespace directory for all database instances.
CREATE TEMPORARY TABLE after_alter AS SELECT * FROM stat_db_objects('alter_db', 'adst_source_tablespace');
(SELECT * FROM before_alter) EXCEPT (SELECT * FROM after_alter);

-- And the dboid directory under the target tablespace directory should remain empty for all database instances.
SELECT * FROM stat_db_objects('alter_db', 'adst_destination_tablespace');

-- Cleanup
SELECT gp_inject_fault('inside_move_db_transaction', 'reset', dbid) FROM gp_segment_configuration WHERE role = 'p' AND content = 0;

DROP DATABASE alter_db;
DROP TABLESPACE adst_source_tablespace;
DROP TABLESPACE adst_destination_tablespace;

DROP SCHEMA adst_w_fault;
